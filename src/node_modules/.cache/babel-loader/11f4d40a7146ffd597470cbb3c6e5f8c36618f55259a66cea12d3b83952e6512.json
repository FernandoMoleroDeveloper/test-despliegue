{"ast":null,"code":"var _jsxFileName = \"/Users/fermaster/TheValley/TEORIA/REACT/react-s12-testing-and-deploy-main/src/pages/NotesPage.js\",\n  _s = $RefreshSig$();\nimport Note from '../components/Note/Note';\nimport React from 'react';\nimport { SAMPLE_NOTES } from '../sample-notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPages = () => {\n  _s();\n  const [notes, setNotes] = React.useState(SAMPLE_NOTES);\n  const toggleImportanceOf = noteId => {\n    const newNotes = notes.map(note => {\n      if (note.id === noteId) {\n        return {\n          ...note,\n          important: !note.important\n        };\n      }\n      return note;\n    });\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      toggleImportance: () => toggleImportanceOf(note.id)\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesPages, \"qoA/PR1BRMy8RwAU1/C9k/k2G10=\");\n_c = NotesPages;\nexport default NotesPages;\nvar _c;\n$RefreshReg$(_c, \"NotesPages\");","map":{"version":3,"names":["Note","React","SAMPLE_NOTES","jsxDEV","_jsxDEV","NotesPages","_s","notes","setNotes","useState","toggleImportanceOf","noteId","newNotes","map","note","id","important","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleImportance","_c","$RefreshReg$"],"sources":["/Users/fermaster/TheValley/TEORIA/REACT/react-s12-testing-and-deploy-main/src/pages/NotesPage.js"],"sourcesContent":["import Note from '../components/Note/Note';\nimport React from 'react';\nimport { SAMPLE_NOTES } from '../sample-notes';\n\nconst NotesPages = () => {\n  const [notes, setNotes] = React.useState(SAMPLE_NOTES);\n\n  const toggleImportanceOf = (noteId) => {\n    const newNotes = notes.map((note) => {\n      if (note.id === noteId) {\n        return {\n          ...note,\n          important: !note.important,\n        };\n      }\n      return note;\n    });\n\n    setNotes(newNotes);\n  };\n\n  return (\n    <div>\n      <h2>Notes:</h2>\n      {notes.map((note) => (\n        <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n      ))}\n    </div>\n  );\n};\n\nexport default NotesPages;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAACP,YAAY,CAAC;EAEtD,MAAMQ,kBAAkB,GAAIC,MAAM,IAAK;IACrC,MAAMC,QAAQ,GAAGL,KAAK,CAACM,GAAG,CAAEC,IAAI,IAAK;MACnC,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,EAAE;QACtB,OAAO;UACL,GAAGG,IAAI;UACPE,SAAS,EAAE,CAACF,IAAI,CAACE;QACnB,CAAC;MACH;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IAEFN,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC;EAED,oBACER,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACdd,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACdV,OAAA,CAACJ,IAAI;MAAec,IAAI,EAAEA,IAAK;MAACQ,gBAAgB,EAAEA,CAAA,KAAMZ,kBAAkB,CAACI,IAAI,CAACC,EAAE;IAAE,GAAzED,IAAI,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACf,EAAA,CAzBID,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}